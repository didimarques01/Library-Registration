/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.bean.Registro;
import model.dao.ComputadorDAO;
import model.dao.RegistroDAO;
import model.bean.Computador;

/**
 *
 * @author Yuri Willians
 */

public class Registrar extends javax.swing.JFrame {

    /**
     * Creates new form Registrar
     */
    public Registrar() {
        initComponents();
        readJTable();
        
        ComputadorDAO daozin = new ComputadorDAO();
        for(Computador computador: daozin.read()) {
            if ((computador.getStatus().toString().equals("Funcionando")) && computador.getDisponibilidade().toString().equals("Disponível")) {
                cbComputadorRegistro.addItem(computador);
            }
        }
    }
    
    public void readJTable() {
        DefaultTableModel modelo = (DefaultTableModel) tableRegistro.getModel();
        modelo.setNumRows(0);
        RegistroDAO rdao = new RegistroDAO();
        
        for (Registro r: rdao.read()) {
            modelo.addRow(new Object[] {
                r.getNome(),
                r.getMatricula(),
                r.getHorario(),
                r.getComputador()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRegistro = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNomeRegistro = new javax.swing.JTextField();
        txtMatriculaRegistro = new javax.swing.JTextField();
        cbHorarioRegistro = new javax.swing.JComboBox();
        cbComputadorRegistro = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Horário");

        tableRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Matrícula", "Horário", "Computador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRegistro.getTableHeader().setReorderingAllowed(false);
        tableRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRegistroMouseClicked(evt);
            }
        });
        tableRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableRegistroKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableRegistro);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro"));

        jLabel1.setText("Nome:");

        jLabel2.setText("Matrícula:");

        jLabel3.setText("Horário:");

        jLabel4.setText("Computador");

        txtNomeRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeRegistroActionPerformed(evt);
            }
        });
        txtNomeRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeRegistroKeyPressed(evt);
            }
        });

        txtMatriculaRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatriculaRegistroActionPerformed(evt);
            }
        });
        txtMatriculaRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatriculaRegistroKeyPressed(evt);
            }
        });

        cbHorarioRegistro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7:00", "8:00", "8:50", "9:40", "10:30", "11:20", "12:10", "13:00", "13:50", "14:40", "15:30", "16:20", "17:10", "18:00", "18:50", "19:40", "20:30", "21:20" }));
        cbHorarioRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbHorarioRegistroActionPerformed(evt);
            }
        });

        cbComputadorRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbComputadorRegistroActionPerformed(evt);
            }
        });

        jButton1.setText("Registrar Horário");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Excluir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMatriculaRegistro)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtNomeRegistro)
                    .addComponent(cbHorarioRegistro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbComputadorRegistro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMatriculaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbHorarioRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbComputadorRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(842, 569));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeRegistroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Registro registro = new Registro();
        RegistroDAO dao = new RegistroDAO();
        
        registro.setMatricula(txtMatriculaRegistro.getText());
        registro.setNome(txtNomeRegistro.getText());
        registro.setHorario((String) cbHorarioRegistro.getSelectedItem());
        registro.setComputador((String) cbComputadorRegistro.getSelectedItem().toString());
        
        List<Registro> lista = dao.read();
        
        int cont = 0;
        
        for(Registro r: lista){
            if(registro.getHorario().toString().equals(r.getHorario().toString()) && registro.getComputador().toString().equals(r.getComputador().toString())){
                cont++;
            }else{
                
            }
        }
        if (cont == 0) {
            try {
                dao.create(registro);
            } catch (SQLException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
                   readJTable();
            } else {
                JOptionPane.showMessageDialog(null, "Computador já registrado nesse horário");
            }
            
            

        
//        for (int x = 0; x<tableRegistro.getRowCount(); x++) {
//            
//        if((tableRegistro.getComponentAt(x, 2).toString() == (registro.getHorario())) && (tableRegistro.getComponentAt(x, 3).toString() == (registro.getComputador()))){
//              
//             JOptionPane.showMessageDialog(null,"Horário já registrado");
//            
//            }else{
//               
//                try {
//                dao.create(registro);
//            } catch (SQLException ex) {
//                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
//            }
////             JOptionPane.showMessageDialog(null,tableRegistro.getComponentAt(x, 2));
////             JOptionPane.showMessageDialog(null,tableRegistro.getComponentAt(x, 3));
//            readJTable(); 
//                 break;
//            }
//        }
        
      
        
//        DefaultTableModel dtmRegistros = (DefaultTableModel) tableRegistro.getModel();
//        Object [] dados = {txtNomeRegistro.getText(), txtMatriculaRegistro.getText(), cbHorarioRegistro.getSelectedItem(), cbComputadorRegistro.getSelectedItem()};
//        dtmRegistros.addRow(dados);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          if(tableRegistro.getSelectedRow() != -1){
            try {
                   Registro r = new Registro();
                   RegistroDAO dao = new RegistroDAO();
                   
                   r.setMatricula(txtMatriculaRegistro.getText());
                   
                   
                   dao.delete(r);
                   
                   txtMatriculaRegistro.setText("");
                   txtNomeRegistro.setText("");
                   cbComputadorRegistro.setSelectedItem("");
                   cbHorarioRegistro.setSelectedItem("");
                   
                   readJTable();
               } catch (SQLException ex) {
                   Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
               }
        
       } else{
           JOptionPane.showMessageDialog(null, "Selecione uma linha para ser excluida.");
       }
          
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtNomeRegistroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeRegistroKeyPressed
        // TODO add your handling code here:
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_txtNomeRegistroKeyPressed

    private void txtMatriculaRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatriculaRegistroActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_txtMatriculaRegistroActionPerformed

    private void txtMatriculaRegistroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaRegistroKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_txtMatriculaRegistroKeyPressed

    private void tableRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRegistroMouseClicked
        // TODO add your handling code here:
         if(tableRegistro.getSelectedRow() != -1){
            
            txtNomeRegistro.setText(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 0).toString());
            txtMatriculaRegistro.setText(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 1).toString());
            cbHorarioRegistro.setSelectedItem(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 2).toString());
            cbComputadorRegistro.setSelectedItem(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_tableRegistroMouseClicked

    private void tableRegistroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableRegistroKeyReleased
        // TODO add your handling code here:
         if(tableRegistro.getSelectedRow() != -1){
            
            txtNomeRegistro.setText(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 0).toString());
            txtMatriculaRegistro.setText(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 1).toString());
            cbHorarioRegistro.setSelectedItem(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 2).toString());
            cbComputadorRegistro.setSelectedItem(tableRegistro.getValueAt(tableRegistro.getSelectedRow(), 3).toString());
        }
    }//GEN-LAST:event_tableRegistroKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          if(tableRegistro.getSelectedRow() != -1){
            
              try {
                   Registro r = new Registro();
                   RegistroDAO dao = new RegistroDAO();
                   
                   r.setMatricula(txtMatriculaRegistro.getText());
                   r.setNome(txtNomeRegistro.getText());
                   r.setHorario((String) cbHorarioRegistro.getSelectedItem());
//                   r.setComputador((String) cbComputadorRegistro.getSelectedItem());
                   
                   dao.update(r);
                   
                   txtMatriculaRegistro.setText("");
                   txtNomeRegistro.setText("");
                   cbComputadorRegistro.setSelectedItem("");
                   cbHorarioRegistro.setSelectedItem("");
                   
                   readJTable();
               } catch (SQLException ex) {
                   Logger.getLogger(Registrar.class.getName()).log(Level.SEVERE, null, ex);
               }
              
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbHorarioRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbHorarioRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbHorarioRegistroActionPerformed

    private void cbComputadorRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbComputadorRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbComputadorRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Registrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbComputadorRegistro;
    private javax.swing.JComboBox cbHorarioRegistro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRegistro;
    private javax.swing.JTextField txtMatriculaRegistro;
    private javax.swing.JTextField txtNomeRegistro;
    // End of variables declaration//GEN-END:variables
}
